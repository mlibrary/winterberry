#!/usr/bin/env ruby
# frozen_string_literal: true

# Determine the root directory of the code base.
script_dir = File.expand_path(File.dirname(__FILE__))
root_dir = File.dirname(script_dir)

require_relative File.join(root_dir, "lib", "logger")

script_logger = UMPTG::Logger.create(logger_fp: STDOUT)

require 'optparse'
require 'ostruct'

# Process the script parameters.
options = OpenStruct.new
options.fulcrum_host = nil
option_parser = OptionParser.new do |opts|
  opts.banner = "Usage: #{File.basename(__FILE__)} [-f production|preview|staging] <monograph_id> [<monograph_id>..]"
  opts.on('-f', '--fulcrum_host [production|preview|staging]', 'Fulcrum environment') do |fulcrum_host|
    options.fulcrum_host = fulcrum_host
  end
  opts.on_tail('-h', '--help', 'Print this help message') do
    script_logger.info(opts)
    exit 0
  end
end
option_parser.parse!(ARGV)
if ARGV.count < 1
  script_logger.info(option_parser.help)
  return
end

monograph_id_list = ARGV

require_relative File.join(root_dir, "lib", "fulcrum")
require_relative File.join(root_dir, "lib", "services")

# Create the serivce for retrieving the NOID manifest.
service = UMPTG::Services::Heliotrope.new(
                :fulcrum_host => options.fulcrum_host
              )

monograph_id_list.each do |monograph_id|
  # Use the monograph ID to retrieve the NOID from Fulcrum.
  #script_logger.info("*" * 10 + " #{monograph_id} " + "*" * 10)

  # Use the monograph NOID to retrieve the monograph manifest from Fulcrum.
  csv_body = service.monograph_export(identifier: monograph_id)
  if csv_body.nil? or csv_body.empty?
    script_logger.error("no manifest found for id #{monograph_id}")
    next
  end
  STDOUT.flush

  manifest = UMPTG::Fulcrum::Manifest::Document.new(
                :csv_body => csv_body
              )
  next if manifest.filesets.count == 0

  script_logger.info("#{monograph_id}: #{manifest.csv.count} #{manifest.filesets.count} \"#{manifest.monograph_row['title']}\"")
  manifest.filesets.each do |row|
    script_logger.info("#{row['file_name']}:#{row['resource_type']}")
  end
end
