#!/usr/bin/env ruby
# frozen_string_literal: true

# Script used for FOPS-0184 to create CSV that
# has HEB Round (16-18) title descriptions to be
# used by MPS to update.

require 'optparse'
require 'ostruct'
require 'os'

# Determine the root directory of the code base.
script_dir = File.expand_path(File.dirname(__FILE__))
root_dir = File.dirname(script_dir)

require_relative File.join(root_dir, "lib", "logger")

script_logger = UMPTG::Logger.create(logger_fp: STDOUT)

# Process the script parameters.
options = OpenStruct.new
options.output_dir = Dir.pwd()
option_parser = OptionParser.new do |opts|
  opts.banner = "Usage: #{File.basename(__FILE__)} [-d <fulcrum_dir>] <monograph_id> [<monograph_id>...]"
  opts.on('-d', '--directory [DIRECTORY]', 'Output directory') do |output_dir|
    options.output_dir = output_dir
  end
  opts.on_tail('-h', '--help', 'Print this help message') do
    script_logger.info(opts)
    exit 0
  end
end
option_parser.parse!(ARGV)
if ARGV.count < 1
  script_logger.info(option_parser.help)
  return
end

# Process the command line parameters.
monograph_id_list = ARGV

require_relative File.join(root_dir, "lib", "services")
require_relative File.join(root_dir, "lib", "fulcrum", "manifest")

csv_file = File.join(options.output_dir, "heb_description.csv")
CSV.open(
        csv_file,
        "w",
        :write_headers=> true,
        :headers => [ "HEB ID", "Title", "Description", "NOID"]
      ) do |csv|
  monograph_id_list.each do |monograph_id|
    script_logger.info("*" * 10 + " #{monograph_id} " + "*" * 10)

    # Use the monograph ID to retrieve the manifest from Fulcrum.
    manifest = UMPTG::Fulcrum::Manifest::Document.new(
                  monograph_id: monograph_id
                )
    if manifest.nil?
      script_logger.error("no manifest found for id #{monograph_id}")
      next
    end

    if manifest.monograph_row.nil?
      script_logger.error("no monograph row found for id #{monograph_id}")
      next
    end
    #puts manifest.monograph_row

    row = {
            'HEB ID' => monograph_id,
            'Title' => manifest.monograph_row['title'],
            'Description' => manifest.monograph_row['description'],
            'NOID' => manifest.monograph_row['noid']
      }
    csv << row
  end
end
