#!/usr/bin/env ruby
# frozen_string_literal: true

# Generate a list of PDF upload dates
# for the specified HEB IDs listed in
# the specified CSV file.

# Determine the root directory of the code base.
script_dir = File.expand_path(File.dirname(__FILE__))
root_dir = File.dirname(script_dir)

require_relative File.join(root_dir, "lib", "logger")

script_logger = UMPTG::Logger.create(logger_fp: STDOUT)

require 'optparse'
require 'ostruct'

# Process the script parameters.
options = OpenStruct.new

option_parser = OptionParser.new do |opts|
  opts.banner = "Usage: #{File.basename(__FILE__)} csv_file <identifier> [<identifier>..]"
  opts.on_tail('-h', '--help', 'Print this help message') do
    script_logger.info(opts)
    exit 0
  end
end
option_parser.parse!(ARGV)
if ARGV.count < 2
  script_logger.info(option_parser.help)
  return
end

csv_file = ARGV[0]
identifier_list = ARGV[1..-1]

require_relative File.join(root_dir, "lib", "csvfile")

csv = UMPTG::CSVFile.read(csv_path: csv_file)

identifier_list.each do |identifier|
  #script_logger.info("*" * 10 + " #{identifier} " + "*" * 10)

  c = csv.find {|row| row['HEB ID'] == identifier}
  if c.nil?
    script_logger.error("no row found for identifier #{identifier}.")
    next
  end

  puts "#{identifier},#{c['PDF Upload Date (latest version)']}"
end

