module UMPTG::EPUB::Processors
  # Class processes images found within an EPUB generated by vendor Newgen.
  class NewgenImageProcessor < UMPTG::EPUB::Processors::ImageProcessor
    @@imgselector = nil

    def process(args = {})
      # Figures expected to wrapped within a <div class="figurewrap">.
      # NOTE: not handling case of <img> not wrapped within a figure
      # container as it has not been encountered to date.
      @@imgselector = UMPTG::EPUB::Processors::NewgenContainerSelector.new if @@imgselector.nil?
      args[:selector] = @@imgselector

      fragments = super(args)

      fragments.each do |fragment|
        case fragment.node.name
        when 'img'
          # Process <img> fragment.
          @img_list += UMPTG::EPUB::Processors::ImageProcessor.process_image(fragment, args)
        else
          # Must be a <figure> fragment. Process the contained images and captions.
          nodes = fragment.node.xpath(".//*[local-name()='img' or @class='figCaption']")
          if nodes.count > 0
            # Empty figure elements not expected.
            @img_list += UMPTG::EPUB::Processors::ImageProcessor.process_figure(nodes, args)
          end
        end
      end
      return fragments
    end
  end
end
