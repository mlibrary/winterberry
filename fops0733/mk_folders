#!/usr/bin/env ruby
# frozen_string_literal: true

# Script for creating FOPS-733 B10 shared folders

require 'optparse'
require 'ostruct'
require 'os'

# Determine the root directory of the code base.
script_dir = File.expand_path(File.dirname(__FILE__))
root_dir = File.dirname(script_dir)

require_relative File.join(root_dir, "lib", "logger")

script_logger = UMPTG::Logger.create(logger_fp: STDOUT)

# Process the script parameters.
options = OpenStruct.new
options.fit_metadata_file = nil
option_parser = OptionParser.new do |opts|
  opts.banner = "Usage: #{File.basename(__FILE__)} reps_dir [reps_dir...]"
  opts.on_tail('-h', '--help', 'Print this help message') do
    script_logger.info(opts)
    exit 0
  end
end
option_parser.parse!(ARGV)
if ARGV.count < 1
  script_logger.info(option_parser.help)
  return
end

# Process the command line parameters.
reps_dir_list = ARGV

#require 'FileUtils'

reps_dir_list.each do |reps_dir|
  unless File.directory?(reps_dir)
    script_logger.error("invalid reps directory #{reps_dir}")
    exit 1
  end
  script_logger.info("*** processing reps directory #{File.basename(reps_dir)} ***")
  STDOUT.flush

  Dir.glob(File.join(reps_dir, "*")).each do |rep_file|
    next unless File.file?(rep_file)

    dname = File.basename(rep_file, ".*")
    d_path = File.join(reps_dir, dname)

    FileUtils.mkdir_p(d_path)
    Dir.glob(File.join(reps_dir, dname + ".*")).each do |f|
     FileUtils.mv(f, d_path)
     script_logger.info("moved #{File.basename(f)} to directory #{dname}")
   end
  end
end
