#!/usr/bin/env ruby
# frozen_string_literal: true

# Script searches for BAR files from
# list of provided ISBNs.
#

require 'optparse'
require 'ostruct'
require 'os'

# Determine the root directory of the code base.
script_dir = File.expand_path(File.dirname(__FILE__))
root_dir = File.dirname(script_dir)

require_relative File.join(root_dir, "lib", "logger")

script_logger = UMPTG::Logger.create(logger_fp: STDOUT)

# Process the script parameters.
options = OpenStruct.new
option_parser = OptionParser.new do |opts|
  opts.banner = "Usage: #{File.basename(__FILE__)} bar_dir isbn [isbn...]"
  opts.on_tail('-h', '--help', 'Print this help message') do
    script_logger.info(opts)
    exit 0
  end
end
option_parser.parse!(ARGV)
if ARGV.count < 2
  script_logger.info(option_parser.help)
  return
end

# Process the command line parameters.
bar_dir_pattern = ARGV[0]
isbn_list = ARGV[1..-1]

#bar_dir_list = Dir.glob("s:/Information\ Management/Fulcrum/MPS/BAR/2022*")
bar_dir_list = Dir.glob(bar_dir_pattern)

require 'find'

isbn_map = {}
isbn_list.each {|isbn| isbn_map[isbn] = "" }

bar_dir_list.each do |bar_dir|
  next if File.basename(bar_dir) == "20220113_pre-2020_batch_250"
  #next if File.basename(bar_dir) == "20220308_pdfs_to_replace"
  #next unless File.basename(bar_dir) == "20220113_pre-2020_batch_250"

  Find.find(bar_dir) do |path|
    next if File.directory?(path)

    isbn_list.each do |isbn|
      if File.basename(path, ".*").start_with?(isbn)
        isbn_map[isbn] += path + ";"
        break
      end
    end
  end
end

isbn_map.each do |isbn,path_list|
  script_logger.info("#{isbn}:#{path_list}")
end