#!/usr/bin/env ruby
# encoding: utf-8

require 'optparse'
require 'ostruct'

# Process the script parameters.
options = OpenStruct.new
option_parser = OptionParser.new do |opts|
  opts.banner = "Usage: #{File.basename(__FILE__)}  <csv_file>"
  opts.on_tail('-h', '--help', 'Print this help message') do
    puts opts
    exit(0)
  end
end
option_parser.parse!(ARGV)
if ARGV.count < 1
  puts option_parser.help
  exit(0)
end

csv_file = ARGV[0]

unless File.exist?(csv_file)
  puts "Error: CSV \"#{File.basename(csv_file)}\" does not exist."
  exit(1)
end
puts "Using CSV file \"#{File.basename(csv_file)}\""

# Determine the root directory of the code base.
script_dir = File.expand_path(File.dirname(__FILE__))
root_dir = File.dirname(script_dir)

require 'csv'

icsv = CSV.parse(File.read(csv_file), {:headers => true, :encoding => 'ISO-8859-1'})
new_rows = []
first_row = true
icsv.each do |row|
  next unless first_row or row['File Name'].match?(/heb90012.[0-9]{4}_01.tif/)
  new_rows << row
  if first_row
    first_row = false
  else
    nrow = new_rows.last
    nrow['File Name'] = File.basename(nrow['File Name'], ".*")[0..12] + ".pdf"
    nrow['Identifier(s)'] = ''
    nrow['Resource Type'] = 'text'
    nrow['Content Type'] = 'pdf'
  end
end

puts "count:#{new_rows.count}"
new_csv_file = File.join(File.dirname(csv_file), File.basename(csv_file, ".*") + "_pdf.csv")
CSV.open(
        new_csv_file,
        "w",
        :write_headers=> true,
        :headers => icsv.headers
      ) do |csv|
  new_rows.each do |nrow|
    csv << nrow
  end
end
