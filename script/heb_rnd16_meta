#!/usr/bin/env ruby
# frozen_string_literal: true

require 'optparse'
require 'ostruct'

# Process the script parameters.
options = OpenStruct.new
options.xhtml = false
option_parser = OptionParser.new do |opts|
  opts.banner = "Usage: #{File.basename(__FILE__)} <manifest_file> [<manifest_file>..]"
  opts.on_tail('-h', '--help', 'Print this help message') do
    puts opts
    exit 0
  end
end
option_parser.parse!(ARGV)
if ARGV.count < 1
  puts option_parser.help
  return
end

# Determine the root directory of the code base.
script_dir = File.expand_path(File.dirname(__FILE__))
root_dir = File.dirname(script_dir)

require 'csv'

manifest_file_list = ARGV

monograph_csv_file = File.join(Dir.pwd, "monograph_csv_file.csv")

# Get headers
manifest_file = manifest_file_list.first
if !File.exists?(manifest_file) or !File.file?(manifest_file)
  puts "Error: #{File.basename(manifest_file)} not found for getting headers."
  exit
end
manifest_csv = CSV.read(
          manifest_file,
          :headers => true,
          :return_headers => false
          )
manifest_headers = manifest_csv.headers
puts manifest_headers

CSV.open(
        monograph_csv_file,
        "w",
        :write_headers=> true,
        :headers => manifest_headers
      ) do |csv|
  manifest_file_list.each do |manifest_file|
    manifest_file = File.expand_path(manifest_file)
    if !File.exists?(manifest_file) or !File.file?(manifest_file)
      puts "Error: #{File.basename(manifest_file)} not found."
      next
    end
    puts "Processing #{File.basename(manifest_file)}"

    #manifest_csv = CSVFile.read_file(:csv_path => manifest_file)
    #monograph_row = Manifest.find_monograph(manifest_csv)
    #puts monograph_row

    manifest_csv = CSV.read(
              manifest_file,
              :headers => true,
              :return_headers => false
              )
    monograph_row = manifest_csv.find {|row| row['File Name'] == '://:MONOGRAPH://:' }
    if monograph_row == nil
      puts "Error: no CSV monograph row"
      return nil
    end
    csv << monograph_row
  end
end
