#!/usr/bin/env ruby
# frozen_string_literal: true

require 'optparse'
require 'ostruct'

# Process the script parameters.
options = OpenStruct.new
options.cover_format = "png"
options.cover_page = 0
options.image_format = "jpeg"
options.resize_pct = 100
options.dimen_threshold = 0
option_parser = OptionParser.new do |opts|
  opts.banner = "Usage: #{File.basename(__FILE__)} [-c format] [-f format] [-p cover_page] [-r resize_pct] [-t dimen_threshold] pdf_file [pdf_file...]"
  opts.on('-c', '--cover_format [format]', 'Extract cover format [bmp|jpeg|jpeg2000|png]') do |cover_format|
    options.cover_format = cover_format
  end
  opts.on('-f', '--image_format [format]', 'Image format [bmp|jpeg|jpeg2000|png]') do |image_format|
    options.image_format = image_format
  end
  opts.on('-p', '--cover_page [0-9]+', 'Extract cover page') do |cover_page|
    options.cover_page = cover_page
  end
  opts.on('-r', '--resize_pct [pct]', 'Image resize percentage') do |resize_pct|
    options.resize_pct = resize_pct
  end
  opts.on('-t', '--dimen_threshold [dimen]', 'Image dimension threshold') do |dimen_threshold|
    options.dimen_threshold = dimen_threshold
  end
  opts.on_tail('-h', '--help', 'Print this help message') do
    puts opts
    exit 0
  end
end
option_parser.parse!(ARGV)
if ARGV.count < 1
  puts option_parser.help
  return
end

# Determine the root directory of the code base.
script_dir = File.expand_path(File.dirname(__FILE__))
root_dir = File.dirname(script_dir)

require_relative File.join(root_dir, "lib", "pdfutil", "pdfutil")

# Set JAVA_HOME. Explicitly set for my laptop (Windows) or tang (Linux).
if Gem.win_platform?
  java_home = File.join(ENV['SYSTEMDRIVE'], "Program Files", "Java", "jre1.8.0_151")
else
  java_home = File.join(File::SEPARATOR, "usr", "lib", "jvm", "java-8-openjdk-amd64")
end

ENV['JAVA_HOME'] = java_home
ENV['PATH'] = File.join(java_home, "bin") + Gem.path_separator + ENV['PATH']

PdfUtil.optimize(
    :cover_format => options.cover_format,
    :cover_page => options.cover_page,
    :resize_pct => options.resize_pct,
    :dimen_threshold => options.dimen_threshold,
    :pdf_file_list => ARGV
    )
