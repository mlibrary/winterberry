#!/usr/bin/env ruby
# frozen_string_literal: true

# Script

require 'optparse'
require 'ostruct'
require 'os'

# Determine the root directory of the code base.
script_dir = File.expand_path(File.dirname(__FILE__))
root_dir = File.dirname(script_dir)

require_relative File.join(root_dir, "lib", "logger")

script_logger = UMPTG::Logger.create(logger_fp: STDOUT)

# Process the script parameters.
options = OpenStruct.new
option_parser = OptionParser.new do |opts|
  opts.banner = "Usage: #{File.basename(__FILE__)}"
  opts.on_tail('-h', '--help', 'Print this help message') do
    script_logger.info(opts)
    exit 0
  end
end
option_parser.parse!(ARGV)
if ARGV.count < 0
  script_logger.info(option_parser.help)
  return
end

mono_list = %w[
x920fz31s,9780915703944,true
vm40xt23f,9780915703951,true
w9505215x,9780915703968,true
mc87pr95q,9781949098631,true
j3860873k,9781949098648,true
k3569611f,9781949098655,true
fj2364087,9781949098662,true
5x21th114,9781949098679,true
5m60qt45z,9781949098686,true
2r36v007z,9781949098693,true
dv13zv85z,9781949098709,true
zw12z702z,9781949098716,true
qj72p882d,9781949098723,true
9z903160b,9781949098730,true
rx913r46c,9781949098761,true
2r36v0087,9781949098778,true
df65v968f,9781949098785,true
d504rm811,9781949098808,true
6t053h650,9781949098815,true
2z10wr83w,9781949098822,true
8336h374m,9781949098839,true
w6634543v,9781949098846,true
g732db57t,9781949098853,true
r207tq965,9781949098860,true
h702q7990,9781949098877,true
2f75r969z,9781949098884,true
2r36v009h,9781949098891,true
736666340,9781949098914,true
d791sh885,9781949098921,true
4f16c471n,9781949098938,true
6m311q95z,9781949098952,true
cf95jd36h,9781949098976,true
mp48sf50c,9781949098990,true
w0892c88q,9781951519001,true
pc289k587,9781951519018,true
3f462712t,9781951519025,true
xd07gv32k,9781951519032,true
3484zj49b,9781951519100,true
7m01bn51r,9781951519117,true
pk02cc35d,9781951519124,true
4t64gp88n,9781951519131,true
9k41zg15c,9781951519148,true
dz010r664,9781951519155,true
bc386k89g,9781951519162,true
6969z2572,9781951519179,true
mp48sf51n,9781951519186,true
sf268662b,9781951519193,true
05741t275,9781951519209,true
z029p652v,9781951519216,true
2b88qd99f,9781951519223,true
xw42n980g,9781951519230,true
rn301292p,9781951519247,true
r781wh71r,9781951519254,true
2v23vw11m,9781951519261,true
6w924d63n,9781951519278,true
cr56n265r,9781951519285,true
vd66w131t,9781951519292,true
k0698887b,9781951519308,true
41687k31n,9781951519315,true
w66345444,9781951519322,true
6395w8978,9781951519339,true
8049g653m,9781951519346,true
qr46r2515,9781951519353,true
c821gm746,9781951519360,true
s7526f28g,9781951519384,true
vt150m03v,9781951519391,true
x346d580d,9781951519414,true
gb19f7537,9781951519421,true
8336h375w,9781951519438,true
pc289k59h,9781951519445,true
mg74qp01w,9781951519452,true
6969z258b,9781951519469,true
2227mr443,9781951519490,true
0c483k98p,9781951519506,true
h989r483k,9781951519513,true
dj52w655m,9781951519520,true
8w32r711d,9781951519537,true
sb397b08h,9781951519544,true
8g84mn93n,9781951519568,true
8s45qb247,9781951519582,true
3t945s55f,9781951519599,true
9w032487j,9781951519605,true
1831cm689,9781951519612,true
b5644t07f,9781951519629,true
qr46r252f,9781951519636,true
5d86p173t,9781951519643,true
9p290b77t,9781951519650,true
8p58pf41n,9781951519667,true
5m60qt47h,9781951519810,true
rj4306415,9781951519827,true
p8418q03b,9781951519834,true
2v23vw135,9781951519841,true
xp68kj008,9781951519858,true
vh53wx60b,9781951519865,true
gm80hw93h,9781951519872,true
dj52w656w,9781951519896,true
pz50gx85f,9781951519902,true
q237ht59c,9781951519919,true
4t64gp89x,9781951519933,true
8c97ks17s,9781951519940,true
qj72p883p,9781951519957,true
9z903161m,9781951519964,true
vm40xt27j,9781951519988,true
mc87pr98j,9781951519995,true
6682x562d,9781951538002,true
sx61dn80b,9781951538019,true
rr171z76n,9781951538026,true
rn301293z,9781951538040,true
n583xw59z,9781951538057,true
br86b511s,9781951538064,true
2f75r9710,9781951538088,true
05741t28f,9781951538095,true
g158bj83z,9781951538118,true
jm214q49m,9781951538125,true
m900nw30m,9781951538132,true
tt44pp664,9781951538156,true
x346d581p,9781951538163,true
b5644t090,9781951538170,true
hq37vq34q,9781951538187,true
h702q800j,9781951538194,true
s1784n408,9781951538200,true
rn3012947,9781951538224,true
5x21th13p,9781951538231,true
9z903162w,9781951538248,true
g158bj85h,9781951538255,true
qj72p884z,9781951538262,true
x059c911z,9781951538279,true
z029p6534,9781951538293,true
4f16c472x,9781951538309,true
6108vd073,9781951538316,true
1v53jz77v,9781951538323,true
4j03d1351,9781951538347,true
ms35tb49v,9781951538354,true
nz806148t,9781951538378,true
6t053h67j,9781951538392,true
6d56zz30q,9781951538408,true
8049g6555,9781951538415,true
k930bz885,9781951538422,true
bc386k91h,9781951538439,true
47429b82d,9781951538446,true
sj1393580,9781951538453,true
5999n5318,9781951538477,true
gb19f754h,9781951538484,true
08612q442,9781951538491,true
kk91fn310,9781951538507,true
9s161776s,9781951538514,true
8p58pf42x,9781951538521,true
gm80hw96b,9781951538538,true
ww72bd16s,9781951538545,true
gm80hw97m,9781951538552,true
9c67wp50g,9781951538569,true
vq27zq140,9781951538576,true
zw12z7037,9781951538583,true
p8418q05w,9781951538590,true
4q77ft10q,9781951538606,true
6q182m68k,9781951538620,true
f1881n529,9781951538637,true
b5644t10r,9781951538644,true
r494vm69g,9781951519476,true
j67315301,9781951519551,true
d504rn176,9781951519094,true
xd07gv629,9781949098969,true
qj72p903z,9781951519063,true
zk51vj85q,9781951519681,true
k643b317b,9781951519698,true
jd472z55g,9781951519070,true
vq27zq40m,9781951519049,true
pv63g2229,9781949098747,true
kd17cv79q,9781951519056,true
00000168v,9780915703906,true
5q47rq74x,9781951519773,true
2r36v036d,9781951538149,true
5138jg875,9781951538460,true
jh343v268,9781951519575,true
gx41mk58x,9781951538385,true
1v53k0157,9781951538613,true
wd375z204,9781951538286,true
db78td98x,9781951519889,true
g445cf968,9781951538361,true
2r36v038z,9781951538330,true
pn89d825n,9781951519674,true
ws859h79t,9781951538071,true
5425kc65c,9781951519803,true
3484zj678,9781949098983,true
7s75df38x,9781951519087,true
kh04dr71r,9781951519711,true
6m311r26r,9781951519704,true
rf55z956d,9781951519728,true
hh63sx756,9781951519407,true
p5547t318,9781951519377,true
j9602287d,9781951519766,true
st74cs32n,9781951538033,true
cv43nz74s,9781949098754,true
kk91fn574,9781951519971,true
fj2364418,9781949098792,true
08612q68n,9781951519926,true
k643b323g,9781951519797,true
3197xn97r,9781951519735,true
rx913r74j,9781951519742,true
2v23vw356,9781951519759,true
9k41zg410,9781951519780,true
2514nn521,9781951538217,true
vd66w159h,9781949098907,true
8w32r7414,9781951519483,true
05741t83h,9781951538743,true
5999n5849,9780915703982,true
cn69m6414,9781951538712,true
vm40xt799,9781951538682,true
ks65hf39z,9781951538675,true
]

noid2isbn = {}
mono_list.each do |mstr|
  m_list = mstr.split(',')
  noid = m_list[0]
  isbn = m_list[1]
  noid2isbn[noid] = isbn
end

dest_dir = File.expand_path('s:/Information Management/Fulcrum/PTG/tickets/FOPS-0412/ummaa/')

require 'fileutils'

Dir.glob(File.join(dest_dir, "*")).each do |mdir|
  #puts mdir
  next unless File.directory?(mdir)

  isbn = noid2isbn[File.basename(mdir, ".*")]
  if isbn.nil?
    script_logger.error("no ISBN for directory #{File.basename(mdir, ".*")}")
    next
  end

  new_dir = File.join(dest_dir, isbn)
  puts "#{File.basename(mdir, ".*")}=>#{File.basename(new_dir, ".*")}"
  FileUtils.mv(mdir, new_dir)
end
