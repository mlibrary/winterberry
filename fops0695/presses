#!/usr/bin/env ruby
# frozen_string_literal: true

# Script displays a list of press monographs

require 'optparse'
require 'ostruct'
require 'os'

# Determine the root directory of the code base.
script_dir = File.expand_path(File.dirname(__FILE__))
root_dir = File.dirname(script_dir)

require_relative File.join(root_dir, "lib", "logger")

script_logger = UMPTG::Logger.create(logger_fp: STDOUT)

# Process the script parameters.
options = OpenStruct.new
option_parser = OptionParser.new do |opts|
  opts.banner = "Usage: #{File.basename(__FILE__)} press [press..]"
  opts.on_tail('-h', '--help', 'Print this help message') do
    script_logger.info(opts)
    exit 0
  end
end
option_parser.parse!(ARGV)
if ARGV.count < 1
  script_logger.info(option_parser.help)
  return
end

press_list = ARGV

#require_relative File.join(root_dir, 'lib', 'services')
require_relative File.join(root_dir, 'lib', 'fulcrum')

# Create the serivce for retrieving the NOID.
service = UMPTG::Services::Heliotrope.new(
                :fulcrum_host => options.fulcrum_host
              )

presses_list = service.presses(press_list: press_list)
presses_list.each do |press|
  puts "#{press['id']}:#{press['subdomain']},#{press['name']}"
end
